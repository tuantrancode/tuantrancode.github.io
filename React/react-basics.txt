1:"$Sreact.fragment"
2:I[79520,["/tuantrancode.github.io/_next/static/chunks/19df48d0b28bc07f.js","/tuantrancode.github.io/_next/static/chunks/634e1e2133a61606.js","/tuantrancode.github.io/_next/static/chunks/7dd66bdf8a7e5707.js"],""]
3:I[35974,["/tuantrancode.github.io/_next/static/chunks/19df48d0b28bc07f.js","/tuantrancode.github.io/_next/static/chunks/634e1e2133a61606.js","/tuantrancode.github.io/_next/static/chunks/7dd66bdf8a7e5707.js"],"ThemeProvider"]
4:I[20908,["/tuantrancode.github.io/_next/static/chunks/19df48d0b28bc07f.js","/tuantrancode.github.io/_next/static/chunks/634e1e2133a61606.js","/tuantrancode.github.io/_next/static/chunks/7dd66bdf8a7e5707.js"],"default"]
5:I[39756,["/tuantrancode.github.io/_next/static/chunks/19df48d0b28bc07f.js","/tuantrancode.github.io/_next/static/chunks/634e1e2133a61606.js","/tuantrancode.github.io/_next/static/chunks/7dd66bdf8a7e5707.js"],"default"]
6:I[37457,["/tuantrancode.github.io/_next/static/chunks/19df48d0b28bc07f.js","/tuantrancode.github.io/_next/static/chunks/634e1e2133a61606.js","/tuantrancode.github.io/_next/static/chunks/7dd66bdf8a7e5707.js"],"default"]
26:I[68027,["/tuantrancode.github.io/_next/static/chunks/19df48d0b28bc07f.js","/tuantrancode.github.io/_next/static/chunks/634e1e2133a61606.js","/tuantrancode.github.io/_next/static/chunks/7dd66bdf8a7e5707.js"],"default"]
:HL["/tuantrancode.github.io/_next/static/chunks/64fb0e62d66091d5.css","style"]
0:{"P":null,"b":"LGYLZaHjb0D6881f9e2UD","p":"/tuantrancode.github.io","c":["","React","react-basics"],"i":false,"f":[[["",{"children":["React",{"children":["react-basics",{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/tuantrancode.github.io/_next/static/chunks/64fb0e62d66091d5.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","script","script-0",{"src":"/tuantrancode.github.io/_next/static/chunks/19df48d0b28bc07f.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/tuantrancode.github.io/_next/static/chunks/634e1e2133a61606.js","async":true,"nonce":"$undefined"}],["$","script","script-2",{"src":"/tuantrancode.github.io/_next/static/chunks/7dd66bdf8a7e5707.js","async":true,"nonce":"$undefined"}]],["$","html",null,{"lang":"en","data-theme":"dark","children":[["$","head",null,{"children":["$","$L2",null,{"id":"theme-script","strategy":"beforeInteractive","children":"\n            (function() {\n              const theme = localStorage.getItem('data-theme') || 'dark';\n              document.documentElement.setAttribute('data-theme', theme);\n            })();\n          "}]}],["$","body",null,{"id":"root","children":["$","$L3",null,{"children":["$","$L4",null,{"children":["$","$L5",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]}]]}]]}],{"children":["React",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["react-basics",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[[["$","section",null,{"children":[["$","h2",null,{"className":"page-header","children":"React"}],["$","p",null,{"children":" The benefit of React is that it only updates DOM elements that have changed by managing a virtual DOM. It also allow us to swap component out of webpages."}],["$","p",null,{"children":[["$","strong",null,{"children":"Primary Libraries"}]," :"]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","code",null,{"children":"import React from 'react'"}]," : for pure React purposes; the library does not interact with the DOM; mainly use for creating components or writing JSX elements"]}],["$","li",null,{"children":[["$","code",null,{"children":"import ReactDOM from 'react-dom/client'"}]," : contains methods for React to interact with DOM"]}]]}],["$","hr",null,{}]]}],["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"jsx","children":"JSX"}],["$","p",null,{"children":"JSX is the language use for React. It's a combination of Javascript + HTML. JSX is used everywhere between the opening and closing tags of JSX elements"}],["$","h4",null,{"className":"sub-section-header","children":"JSX Elements"}],["$","ul",null,{"children":[["$","li",null,{"children":["JSX Elements are the same as HTML Elements, like ",["$","code",null,{"children":"div button input p"}]," except they're in Javascript file, but they are not the same as React components"]}],"$L7","$L8","$L9","$La","$Lb"]}],"$Lc","$Ld","$Le","$Lf"]}],"$L10","$L11","$L12","$L13","$L14","$L15","$L16","$L17","$L18","$L19","$L1a","$L1b","$L1c","$L1d","$L1e","$L1f","$L20","$L21","$L22","$L23"],null,"$L24"]}],{},null,false]},null,false]},null,false]},null,false],"$L25",false]],"m":"$undefined","G":["$26",["$L27"]],"s":false,"S":true}
5c:I[97367,["/tuantrancode.github.io/_next/static/chunks/19df48d0b28bc07f.js","/tuantrancode.github.io/_next/static/chunks/634e1e2133a61606.js","/tuantrancode.github.io/_next/static/chunks/7dd66bdf8a7e5707.js"],"OutletBoundary"]
5e:I[11533,["/tuantrancode.github.io/_next/static/chunks/19df48d0b28bc07f.js","/tuantrancode.github.io/_next/static/chunks/634e1e2133a61606.js","/tuantrancode.github.io/_next/static/chunks/7dd66bdf8a7e5707.js"],"AsyncMetadataOutlet"]
60:I[97367,["/tuantrancode.github.io/_next/static/chunks/19df48d0b28bc07f.js","/tuantrancode.github.io/_next/static/chunks/634e1e2133a61606.js","/tuantrancode.github.io/_next/static/chunks/7dd66bdf8a7e5707.js"],"ViewportBoundary"]
62:I[97367,["/tuantrancode.github.io/_next/static/chunks/19df48d0b28bc07f.js","/tuantrancode.github.io/_next/static/chunks/634e1e2133a61606.js","/tuantrancode.github.io/_next/static/chunks/7dd66bdf8a7e5707.js"],"MetadataBoundary"]
63:"$Sreact.suspense"
7:["$","li",null,{"children":["They can contain attributes like ",["$","code",null,{"children":"id"}]]}]
8:["$","ul",null,{"children":["$","li",null,{"children":["The HTML attribute ",["$","code",null,{"children":"class"}]," can not be used in JSX, instead ",["$","code",null,{"children":"className"}],"has to be used instead because class is a reserved Javascript keyword"]}]}]
9:["$","li",null,{"children":"They can be assigned to variables and pass around like functions"}]
a:["$","li",null,{"children":["They must be ",["$","mark",null,{"children":"wrapped in parenthesis ()"}]," if the element require multiple lines of code"]}]
b:["$","li",null,{"children":["$","mark",null,{"children":["There can only be ",["$","strong",null,{"children":"one outermost"}]," html element in a jsx element"]}]}]
c:["$","p",null,{"children":[["$","strong",null,{"children":"Differences in React"}]," :"]}]
d:["$","ul",null,{"children":[["$","li",null,{"children":["The HTML attribute ",["$","code",null,{"children":"class"}]," can not be used in JSX, instead ",["$","code",null,{"children":"className"}]," has to be used instead because class is a reserved Javascript keyword"]}],["$","li",null,{"children":"Elements that have a self-closing tag MUST have a forward slash before the final bracket"}],["$","ul",null,{"children":["$","li",null,{"children":["Example: ",["$","code",null,{"children":"<img src=\"\"/> <input name=\"\"/> <br/>"}]]}]}],["$","li",null,{"children":"JSX elements must be wrapped in parenthesis () if the element require multiple lines of code"}],["$","li",null,{"children":["Similar to injecting Javascript ",["$","code",null,{"children":"$${expression}"}]," in string, it's possible to inject Javascript into JSX expressions too, but using only curly braces ",["$","code",null,{"children":"{js expression}"}]]}],["$","ul",null,{"children":["$","li",null,{"children":["Example: ",["$","code",null,{"children":["<img src=","{variableName}","/>"]}]," : there is no need for quotation mark"]}]}]]}]
28:Tb29,<span class="token keyword">const</span> jsxElement <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top-bar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top-nav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menuBtn<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>functionName<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">Menu</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">Link</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>e:["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"$28"}}]}]
f:["$","hr",null,{}]
29:T66c,<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">'react-dom/client'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> root <span class="token operator">=</span> ReactDOM<span class="token punctuation">.</span><span class="token function">createRoot</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
root<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>jsxElement<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// HTML</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>2a:T9cd,<span class="token comment">// Using ternary operator</span>
<span class="token keyword">const</span> headline <span class="token operator">=</span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token plain-text">
    </span><span class="token punctuation">{</span> age <span class="token operator">>=</span> drinkingAge <span class="token operator">?</span> <span class="token string">'Buy Drink'</span> <span class="token operator">:</span> <span class="token string">'Do Teen Stuff'</span> <span class="token punctuation">}</span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Using &amp;&amp; operator</span>
<span class="token keyword">const</span> tasty <span class="token operator">=</span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token plain-text">Applesauce</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token plain-text">
    </span><span class="token punctuation">{</span> <span class="token operator">!</span>baby <span class="token operator">&amp;&amp;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token plain-text">Pizza</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token punctuation">}</span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>10:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"renderingJSX","children":"Rendering JSX Elements"}],["$","ul",null,{"children":[["$","li",null,{"children":"JSX element typically render to one react root."}],["$","li",null,{"children":["Use ",["$","code",null,{"children":"createRoot()"}]," method to create the root from 'react-dom/client' library"]}],["$","li",null,{"children":["Use ",["$","code",null,{"children":"render()"}]," method to render the JSX element"]}]]}],["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"$29"}}]}],["$","h4",null,{"className":"sub-section-header","children":"Conditional Rendering"}],["$","ul",null,{"children":["$","li",null,{"children":["You can use the ternary operator and ",["$","code",null,{"children":"&&"}]," to make conditional rendering, but not",["$","code",null,{"children":"if"}]," statements"]}]}],["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"$2a"}}]}],"$L2b"]}]
2c:T1072,<span class="token comment">// Mapping a string array</span>
<span class="token keyword">const</span> strings <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Home'</span><span class="token punctuation">,</span> <span class="token string">'Shop'</span><span class="token punctuation">,</span> <span class="token string">'About Me'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> listItems <span class="token operator">=</span> strings<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">string</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>string<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>string<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
root<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>listItems<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Output</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Home<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">Home</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Shop<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">Shop</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>About Me<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">About Me</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>11:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"renderingJSX","children":"Using array.map() Method"}],["$","p",null,{"children":"The map() method is very useful for building repetitive elements from an array."}],["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"$2c"}}]}],"$L2d","$L2e","$L2f"]}]
12:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"key","children":"JSX key Attribute"}],["$","p",null,{"children":["When rendering with map(), React uses the ",["$","code",null,{"children":"key"}]," attribute to identify which element was mapped from which value. This allows React to update/remove only the necessary element when the list changes."]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","code",null,{"children":"key"}]," must be unique among siblings element, but they don't have to be globally unique"]}],["$","li",null,{"children":"Don't use the array index as a key unless you're sure items never reorder or get removed."}],["$","ul",null,{"children":["$","li",null,{"children":["Combining value and index to make a key can work, but list can not be re-ordered:",["$","code",null,{"children":"key={array[i] + i}"}]]}]}],["$","li",null,{"children":["Keys are not accessible inside the component via ",["$","code",null,{"children":"props"}]]}],["$","li",null,{"children":"ALWAYS try to have the key attribute for repetitive elements as it makes rendering more efficient"}]]}],["$","hr",null,{}]]}]
30:Tf58,<span class="token comment">// MySimpleComponent cannot accept attributes or have nested children</span>
<span class="token keyword">function</span> <span class="token function">MySimpleComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">Hello, I'm a functional React Component!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>   

<span class="token comment">// MyNewComponent can accept attributes and nested children because it uses props</span>
<span class="token keyword">function</span> <span class="token function">MyNewComponent</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>className<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text"> </span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>children <span class="token operator">||</span> <span class="token string">"Hello, I'm a functional React Component!"</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>   

<span class="token comment">// Using functional component</span>
<span class="token keyword">const</span> nestedComponent <span class="token operator">=</span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MyNewComponent</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top-bar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">OtherComponent</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MyNewComponent</span></span><span class="token punctuation">></span></span>  
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Rendering functional component</span>
root<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MySimpleComponent</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">)</span>13:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"component","children":"React Component"}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"Component"}],": for React, it is a block of code that renders HTML and re-renders whenever some data changes"]}],["$","li",null,{"children":[["$","strong",null,{"children":"Functional Component"}],": a JavaScript function that returns a JSX element (a component)"]}],["$","ul",null,{"children":[["$","li",null,{"children":"Functional components MUST begin with a capital letter, or the React compiler will not recognize it as a React component"}],["$","ul",null,{"children":["$","li",null,{"children":"The JS file of the component should also have the first letter capitalized for easy recognition."}]}],["$","li",null,{"children":["They can be used like JSX elements: nesting other components and adding attributes, but require passing and using ",["$","code",null,{"children":"props"}]," within the function"]}],["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"$30"}}]}]]}]]}],"$L31"]}]
14:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"lifecycle","children":"Functional Component (with Hooks) Lifecycle"}],["$","p",null,{"children":"Sequence: Mount → Render → Update (re-render on state/props change) → Unmount"}],["$","ol",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"Mounting"}],":",["$","ul",null,{"children":[["$","li",null,{"children":"Runs the function once"}],["$","li",null,{"children":[["$","code",null,{"children":"useEffect(() => {... }, [])"}]," runs after the initial render"]}]]}]]}],["$","li",null,{"children":[["$","strong",null,{"children":"Updating"}],":",["$","ul",null,{"children":[["$","li",null,{"children":"Function runs again when state or props change"}],["$","li",null,{"children":[["$","code",null,{"children":"useEffect(() => {... })"}]," runs after every render by default"]}],["$","li",null,{"children":[["$","code",null,{"children":"useEffect(() => {... }, [deps])"}]," runs when dependencies change"]}]]}]]}],["$","li",null,{"children":[["$","strong",null,{"children":"Unmounting"}],":",["$","ul",null,{"children":["$","li",null,{"children":["Cleanup function inside ",["$","code",null,{"children":"useEffect"}]," runs"]}]}]]}]]}],["$","hr",null,{}]]}]
32:T10eb,<span class="token comment">// Passing info to Button component as attributes</span>
root<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span> 
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submitBtn<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>myFunction<span class="token punctuation">}</span></span> <span class="token attr-name">data</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span> 
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// The functional component accesses the info using props</span>
<span class="token keyword">function</span> <span class="token function">Button</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">calcData</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>className<span class="token punctuation">}</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>onClick<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Using destructuring to simplify</span>
<span class="token keyword">function</span> <span class="token function">Button</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> data<span class="token punctuation">,</span> className<span class="token punctuation">,</span> onClick <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">calcData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>className<span class="token punctuation">}</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onClick<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>15:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"props","children":"Props"}],["$","p",null,{"children":[["$","code",null,{"children":"props"}]," are used to pass information from one component to another (like className, style, children nodes)"]}],["$","ul",null,{"children":[["$","li",null,{"children":["The functional component adds ",["$","code",null,{"children":"props"}]," into its argument to indicate it will accept attributes"]}],["$","li",null,{"children":["By giving attributes to the component, the attributes and their values are passed to the functional component via ",["$","code",null,{"children":"props"}]]}],["$","li",null,{"children":["Add curly braces ",["$","code",null,{}]," to pass JavaScript expressions like functions, arrays, or objects"]}],["$","li",null,{"children":["Use ",["$","code",null,{"children":"useContext"}]," if you're passing ",["$","code",null,{"children":"props"}]," deeply or need shared state across multiple components"]}]]}],["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"$32"}}]}],"$L33"]}]
34:T26d2,<span class="token comment">// Parent component</span>
<span class="token keyword">function</span> <span class="token function">Parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// handleIncrement allows the child component to modify the count</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleIncrement</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setCount</span><span class="token punctuation">(</span><span class="token parameter">current</span> <span class="token operator">=></span> current <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Child</span></span> <span class="token attr-name">count</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>count<span class="token punctuation">}</span></span> <span class="token attr-name">onIncrement</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleIncrement<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Child component</span>
<span class="token keyword">function</span> <span class="token function">Child</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> count<span class="token punctuation">,</span> onIncrement <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  count <span class="token operator">=</span> count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">// ❌ this won't work; props are read-only</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">Count: </span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onIncrement<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">Increment</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token comment">// Simplified version using setCount directly</span>
<span class="token keyword">function</span> <span class="token function">Parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Child</span></span> <span class="token attr-name">count</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>count<span class="token punctuation">}</span></span> <span class="token attr-name">setCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>setCount<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">Child</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> count<span class="token punctuation">,</span> setCount <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">Count: </span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setCount</span><span class="token punctuation">(</span><span class="token parameter">current</span> <span class="token operator">=></span> current <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">Increment</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>16:["$","section",null,{"children":[["$","h4",null,{"className":"sub-section-header","children":"Passing Props to Children Components"}],["$","p",null,{"children":[["$","code",null,{"children":"props"}]," are immutable (read-only) and one-way: data flows down from the parent to the child"]}],["$","ul",null,{"children":["$","li",null,{"children":"If a child component needs to modify a prop, the parent must pass a callback function as a reference"}]}],["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"$34"}}]}],"$L35"]}]
36:T128b,<span class="token comment">// Parent component</span>
<span class="token keyword">function</span> <span class="token function">Grid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>grid</span><span class="token punctuation">></span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Card</span></span><span class="token punctuation">></span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span><span class="token plain-text">Image 1</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/image1.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Card</span></span><span class="token punctuation">></span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Card</span></span><span class="token punctuation">></span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span><span class="token plain-text">Image 2</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/image2.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Card</span></span><span class="token punctuation">></span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>grid</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Child component</span>
<span class="token comment">// Content inside Card depends on parent; makes lower-level components reusable</span>
<span class="token keyword">function</span> <span class="token function">Card</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>grid-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">
      </span><mark><span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span></mark><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>17:["$","section",null,{"children":[["$","h4",null,{"className":"sub-section-header","children":"Nesting Components with props.children"}],["$","p",null,{"children":[["$","code",null,{"children":"props.children"}]," returns everything between a component's opening and closing JSX tags"]}],["$","ul",null,{"children":["$","li",null,{"children":"Useful for reusing components while letting the parent control the content"}]}],["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"$36"}}]}],"$L37"]}]
38:T517,<span class="token keyword">function</span> <span class="token function">Card</span><span class="token punctuation">(</span><span class="token punctuation">{</span> src <span class="token operator">=</span> <span class="token string">'/defaultImage.jpg'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>src<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

Card<span class="token punctuation">.</span>defaultProps <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">src</span><span class="token operator">:</span> <span class="token string">'/defaultImage.jpg'</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>39:T429,<span class="token keyword">function</span> <span class="token function">Card</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> src <span class="token operator">=</span> <span class="token string">'/defaultImage.jpg'</span> <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>src<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>18:["$","section",null,{"children":[["$","h4",null,{"className":"sub-section-header","children":"Setting Default Values for props"}],["$","p",null,{"children":["Default values can be set for ",["$","code",null,{"children":"props"}]," if none are passed, using three methods:"]}],["$","ul",null,{"children":[["$","li",null,{"children":["Add a ",["$","code",null,{"children":"defaultProps"}]," static property"]}],["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"$38"}}]}],["$","li",null,{"children":"Add the default value directly in the function arguments"}],["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">function</span> <span class=\"token function\">Card</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> src <span class=\"token operator\">=</span> <span class=\"token string\">'/defaultImage.jpg'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>src<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>"}}]}],["$","li",null,{"children":"Set the default value inside the function body using destructuring"}],["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"$39"}}]}]]}],"$L3a"]}]
19:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"hooks","children":"Hooks"}],["$","p",null,{"children":"Hooks allow us to manage state, lifecycle methods, and other React features inside functional components."}],["$","p",null,{"children":["Some common hooks: ",["$","code",null,{"children":"useState, useEffect, useContext, useReducer, useRef, useMemo, useCallback"}]]}],["$","p",null,{"children":["$","strong",null,{"children":"Rules of Hooks"}]}],["$","ul",null,{"children":[["$","li",null,{"children":"Only call hooks at the top level (inside the main function body)"}],["$","ul",null,{"children":["$","li",null,{"children":"i.e., don't call hooks inside loops, conditions, or nested functions"}]}],["$","li",null,{"children":"Only call hooks in React functions (functional components and custom hooks)"}],["$","ul",null,{"children":[["$","li",null,{"children":"Functional components start with a capital letter"}],["$","li",null,{"children":"Custom hooks start with 'use', call other hooks, and return values, state, or logic (not JSX)"}]]}]]}],["$","hr",null,{}]]}]
3b:Tb22,<span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1. useState call</span>
  <mark><span class="token plain-text">const [count, setCount] = useState(0);</span></mark>

  <span class="token keyword">const</span> <span class="token function-variable function">increment</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token comment">// 2. Update state</span>
    <mark><span class="token plain-text">setCount(prev =&amp;gt; prev + 1);</span></mark>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">
      // 3. Use state
      </span><mark><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">Count: </span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></mark><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>increment<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">Increase</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>1a:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"useState","children":"State Hook"}],["$","p",null,{"children":["$","code",null,{"children":"[ current, setState ] = useState(initial)"}]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","code",null,{"children":"useState"}]," : returns an array with the current state and a state setter"]}],["$","li",null,{"children":[["$","code",null,{"children":"current"}]," : the current state value"]}],["$","li",null,{"children":[["$","code",null,{"children":"setState(callbackFunc)"}]," : a function that we can use to update the value of the current state"]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","code",null,{"children":"setState( (current) => {return newState} )"}]," : the ",["$","code",null,{"children":"callbackFunc"}]," always have the current state (or previous state) as a parameter and return the new state"]}],["$","li",null,{"children":["Always use a callback function in ",["$","code",null,{"children":"setState"}]," instead of using",["$","code",null,{"children":"setState(current + 1)"}]," because it can cause race condition"]}],["$","li",null,{"children":"React will always re-render the component (unless new state is the same as old) whenever the setter function is called"}],["$","ul",null,{"children":["$","li",null,{"children":"i.e. React will calls on the functional component again and re-render the whole component, so the whole function rerun except with different state values"}]}]]}],["$","li",null,{"children":[["$","code",null,{"children":"initial"}]," : the initial value of the state (optional, but recommended to put an empty object, array, or ",["$","code",null,{"children":"null"}],", otherwise useState default to ",["$","code",null,{"children":"undefined"}],")"]}]]}],["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"$3b"}}]}],"$L3c"]}]
3d:T25d2,<span class="token keyword">import</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">UsersList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>users<span class="token punctuation">,</span> setUsers<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>error<span class="token punctuation">,</span> setError<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <mark><span class="token plain-text">useEffect(() =&amp;gt; </span><span class="token punctuation">{</span></mark>
    <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fetchUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">"https://jsonplaceholder.typicode.com/users"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>response<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">HTTP error! status: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>response<span class="token punctuation">.</span>status<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setUsers</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setError</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">fetchUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <mark><span class="token plain-text">[]</span></mark><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>loading<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">Loading...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">Error: </span><span class="token punctuation">{</span>error<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span><span class="token plain-text">User List</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token plain-text">
        </span><span class="token punctuation">{</span>users<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">user</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>user<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span><span class="token plain-text"> — </span><span class="token punctuation">{</span>user<span class="token punctuation">.</span>email<span class="token punctuation">}</span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>1b:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"useEffect","children":"Effect Hook"}],["$","p",null,{"children":["$","code",null,{"children":"useEffect(callbackFunc, [dependencyArray])"}]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","code",null,{"children":"callbackFunc"}]," returns a ",["$","code",null,{"children":"cleanup()"}]," function to be used before re-rendering and unmounting a component"]}],["$","li",null,{"children":["The 2nd argument takes a dependency array that tells ",["$","code",null,{"children":"useEffect"}]," to run only if any variable in the array changed, like ",["$","code",null,{"children":"[state]"}]]}],["$","ul",null,{"children":[["$","li",null,{"children":["Passing an empty dependency array ",["$","code",null,{"children":"[]"}]," tells ",["$","code",null,{"children":"useEffect"}]," to only run after the first render()"]}],["$","li",null,{"children":["General rule of thumb is to include any variables or functions from outer scope that ",["$","code",null,{"children":"useEffect"}]," used, like the setter of the context"]}]]}]]}],["$","p",null,{"children":[["$","code",null,{"children":"useEffect"}]," runs...  everytime AFTER the component finishes rendering by calling on the callback function, or effect"]}],["$","ul",null,{"children":[["$","li",null,{"children":"When the component is mounted."}],["$","li",null,{"children":"When any value in the dependency array changes, it runs the cleanup function and then the effect."}],["$","li",null,{"children":"It runs the cleanup function one last time before unmounting a component"}]]}],["$","p",null,{"children":["$","strong",null,{"children":"Uses of Effect Hook: "}]}],["$","ul",null,{"children":[["$","li",null,{"children":"Use to fetch data from back-end, subscribe to a stream of data, manage timers and intervals, read/edit DOM"}],["$","li",null,{"children":"There are 3 key moments in a component's lifecycle that can make use of the Effect Hook"}],["$","ul",null,{"children":[["$","li",null,{"children":"When component is first added/mounted to the DOM and renders"}],["$","ul",null,{"children":["$","li",null,{"children":["Only the body of the ",["$","code",null,{"children":"callbackFunc"}]," is run"]}]}],["$","li",null,{"children":"When it re-render due to state or props change"}],["$","ul",null,{"children":["$","li",null,{"children":["Both the body of the ",["$","code",null,{"children":"callbackFunc"}]," and ",["$","code",null,{"children":"cleanup"}]," function is run"]}]}],["$","li",null,{"children":"When it's removed/unmounted from the DOM"}],["$","ul",null,{"children":["$","li",null,{"children":["Only the ",["$","code",null,{"children":"cleanup"}]," function is run"]}]}]]}],["$","li",null,{"children":["Keep hooks separate based on their effect - i.e. one ",["$","code",null,{"children":"useEffect"}]," hook for setting up menu items and another ",["$","code",null,{"children":"useEffect"}]," for fetching data"]}]]}],["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"$3d"}}]}],"$L3e"]}]
3f:T819,<span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">handleResize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"resize"</span><span class="token punctuation">,</span> handleResize<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">"resize"</span><span class="token punctuation">,</span> handleResize<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>40:T636,<span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> btn <span class="token operator">=</span> buttonRef<span class="token punctuation">.</span>current<span class="token punctuation">;</span>
  btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> handleClick<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span> btn<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> handleClick<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>1c:["$","section",null,{"children":[["$","h4",null,{"className":"sub-section-header","children":"When Cleanup is Needed"}],["$","ul",null,{"children":[["$","li",null,{"children":["Event listeners on elements outside the component - ",["$","code",null,{"children":"window, document, body"}]]}],["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"$3f"}}]}],["$","li",null,{"children":["Adding listeners using ",["$","code",null,{"children":"ref"}]]}],["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"$40"}}]}],"$L41","$L42","$L43","$L44","$L45","$L46"]}],"$L47"]}]
48:T167f,<span class="token comment">// Preserving values between render</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect<span class="token punctuation">,</span> useRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">PreviousValueTracker</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <mark><span class="token plain-text">const prevCountRef = useRef();</span></mark>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span> <span class="token punctuation">{</span>
    <mark><span class="token plain-text">prevCountRef.current = count;</span></mark>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span><span class="token plain-text">Current Count: </span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span><span class="token plain-text">
      </span><mark><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span><span class="token plain-text">Previous Count: </span><span class="token punctuation">{</span>prevCountRef<span class="token punctuation">.</span>current<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span></mark><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span> <span class="token function">setCount</span><span class="token punctuation">(</span>c <span class="token operator">=</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span> c <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">Increment</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span> <span class="token function">setCount</span><span class="token punctuation">(</span>c <span class="token operator">=</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span> c <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">Decrement</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>1d:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"useRef","children":"Reference Hook"}],["$","p",null,{"children":["$","code",null,{"children":"ref = useRef(initial)"}]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","code",null,{"children":"ref"}]," : an object with a single property: ",["$","code",null,{"children":"current"}]," that will persist between re-render"]}],["$","li",null,{"children":[["$","code",null,{"children":"ref.current"}]," : use to access and update the value of the object"]}],["$","li",null,{"children":[["$","code",null,{"children":"initial"}]," : inital value of ",["$","code",null,{"children":"ref.current"}]]}],["$","li",null,{"children":[["$","code",null,{"children":"useRef"}]," will keep the reference if it's an object"]}],["$","li",null,{"children":[["$","code",null,{"children":"ref"}]," objects are removed on unmount"]}]]}],["$","p",null,{"children":"Used to access DOM elements or persist a value between re-render, updating persisting values between render without causing re-render "}],["$","ul",null,{"children":[["$","li",null,{"children":"Accessing DOM elements directly"}],["$","li",null,{"children":"Storing mutable values that don't trigger a re-render"}],["$","li",null,{"children":"Keeping previous values between re-render for comparison"}]]}],["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"$48"}}]}],"$L49","$L4a","$L4b"]}]
4c:T23b0,<span class="token comment">// JSX</span>
<span class="token comment">// ThemeContext.js</span>
<span class="token comment">// 1. Create the ThemeContext and ThemeProvider</span>
<span class="token string">"use client"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>createContext<span class="token punctuation">,</span> useContext<span class="token punctuation">,</span> useState<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>

<mark><span class="token plain-text">const ThemeContext = createContext();</span></mark>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">ThemeProvider</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>children<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>theme<span class="token punctuation">,</span> setTheme<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">"light"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
  <mark><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ThemeContext.Provider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> theme<span class="token punctuation">,</span> setTheme <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">
            </span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ThemeContext.Provider</span></span><span class="token punctuation">></span></span></mark>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<mark><span class="token plain-text">export function useTheme() </span><span class="token punctuation">{</span></mark>
   <span class="token keyword">return</span> <span class="token function">useContext</span><span class="token punctuation">(</span>ThemeContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token comment">// app/layout.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>ThemeProvider<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'context/ThemeContext'</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">RootLayout</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>children<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">
          // 2. Wrap children in the Provider
          </span><mark><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ThemeProvider</span></span><span class="token punctuation">></span></span></mark><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Child</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ThemeProvider</span></span><span class="token punctuation">></span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span class="token plain-text">
    );
}
--------------------------------------------------------------
/ Child.js
// Using the value
import </span><span class="token punctuation">{</span>useTheme<span class="token punctuation">}</span><span class="token plain-text"> from 'context/ThemeContext';

function Child()</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>theme<span class="token punctuation">,</span> setTheme<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>
        <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setTheme</span><span class="token punctuation">(</span>theme <span class="token operator">===</span> <span class="token string">"light"</span> <span class="token operator">?</span> <span class="token string">"dark"</span> <span class="token operator">:</span> <span class="token string">"light"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">Toggle Theme
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>1e:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"useContext","children":"Context Hook"}],["$","p",null,{"children":["React Context is another way to pass information to components and their children without using",["$","code",null,{"children":"props"}]]}],["$","ul",null,{"children":[["$","li",null,{"children":"Use React Context to give many components access to the same state"}],["$","li",null,{"children":["React Context also allow any component children component to get access without having to drill",["$","code",null,{"children":"props"}]," down to deeply nested children"]}]]}],["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"$4c"}}]}],"`","$L4d"]}]
1f:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"useMemoCallback","children":"Memo & Callback Hooks"}],["$","p",null,{"children":"Memoization: optimizes expensive computations by caching results"}],["$","p",null,{"children":"Memoized functions: prevents unnecessary function re-creations"}],["$","p",null,{"children":"Useful for preventing the reference of an variable from changing if it's used in a dependency array"}],["$","hr",null,{}]]}]
20:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"useReducer","children":"Reducer Hook"}],["$","p",null,{"children":"Advanced State Management - An alternative to useState when state logic is complex."}],["$","hr",null,{}]]}]
4e:T4e7,<span class="token comment">// JSX</span>
<span class="token keyword">function</span> <span class="token function">SubmitButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'Submission Successful.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>button <mark><span class="token plain-text">onClick=</span><span class="token punctuation">{</span>handleClick<span class="token punctuation">}</span></mark><span class="token operator">></span>Submit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>21:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"eventListener","children":"Event Listener & Handler"}],["$","p",null,{"children":"Event handlers are custom callback functions with the naming convention that they start with 'handle'"}],["$","p",null,{"children":"Event listeners are used in the same way as their HTML counterpart"}],["$","h4",null,{"className":"sub-section-header","children":"Naming Convention"}],["$","ul",null,{"children":[["$","li",null,{"children":["React uses camelCase to name their events - ",["$","code",null,{"children":"onClick"}]," instead of ",["$","code",null,{"children":"click"}]]}],["$","li",null,{"children":"The custom callback function that handles the event commonly starts with 'handle'"}],["$","li",null,{"children":["For 'click' event, the callback function would be named ",["$","code",null,{"children":"handleClick"}]]}],["$","li",null,{"children":["For 'hover' event, the callback function would be named ",["$","code",null,{"children":"handleHover"}]]}]]}],["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"$4e"}}]}],["$","h4",null,{"className":"sub-section-header","children":"Common Event React Supports"}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"Mouse Events"}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","code",null,{"children":"onClick"}]," : Mouse click on an element"]}],["$","li",null,{"children":[["$","code",null,{"children":"onDoubleClick"}]," : Double-click on an element"]}],["$","li",null,{"children":[["$","code",null,{"children":"onMouseDown"}]," / ",["$","code",null,{"children":"onMouseUp"}]," : Mouse button pressed/released"]}],["$","li",null,{"children":[["$","code",null,{"children":"onMouseMove"}]," : Mouse moves over an element"]}],["$","li",null,{"children":[["$","code",null,{"children":"onMouseEnter"}]," / ",["$","code",null,{"children":"onMouseLeave"}]," : Mouse enters/leaves (no bubbling)"]}],["$","li",null,{"children":[["$","code",null,{"children":"onMouseOver"}]," / ",["$","code",null,{"children":"onMouseOut"}]," : Mouse enters/leaves (bubbles)"]}],["$","li",null,{"children":[["$","code",null,{"children":"onContextMenu"}]," : Right-click context menu"]}]]}]]}],["$","li",null,{"children":[["$","strong",null,{"children":"Pointer Events"}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","code",null,{"children":"onPointerDown"}],", ",["$","code",null,{"children":"onPointerUp"}],", ",["$","code",null,{"children":"onPointerMove"}]," : Pointer pressed, released, moved"]}],["$","li",null,{"children":[["$","code",null,{"children":"onPointerEnter"}],", ",["$","code",null,{"children":"onPointerLeave"}]," : Pointer enters/leaves (no bubbling)"]}],"$L4f","$L50"]}]]}],"$L51","$L52","$L53","$L54","$L55","$L56","$L57","$L58","$L59"]}],"$L5a","$L5b"]}]
22:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"portal","children":"Communicating Between Components"}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":["Using ",["$","code",null,{"children":"props"}]]}],": parent to children"]}],["$","li",null,{"children":[["$","strong",null,{"children":["Using ",["$","code",null,{"children":"ref"}]]}],": parent → child 1 → parent → child 2"]}],["$","li",null,{"children":[["$","strong",null,{"children":["Using ",["$","code",null,{"children":"context"}]]}],": as long as the components are wrapped around the context provider"]}],["$","li",null,{"children":[["$","strong",null,{"children":["Using ",["$","code",null,{"children":"zustand store"}]]}],": global"]}]]}],["$","hr",null,{}]]}]
23:["$","section",null,{"children":["$","h3",null,{"className":"section-header","id":"portal","children":"Portal"}]}]
24:["$","$L5c",null,{"children":["$L5d",["$","$L5e",null,{"promise":"$@5f"}]]}]
25:["$","$1","h",{"children":[null,[["$","$L60",null,{"children":"$L61"}],null],["$","$L62",null,{"children":["$","div",null,{"hidden":true,"children":["$","$63",null,{"fallback":null,"children":"$L64"}]}]}]]}]
27:["$","link","0",{"rel":"stylesheet","href":"/tuantrancode.github.io/_next/static/chunks/64fb0e62d66091d5.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]
2b:["$","hr",null,{}]
2d:["$","br",null,{}]
65:T13bb,<span class="token comment">// Mapping a set</span>
<span class="token keyword">const</span> navSet <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">'Home'</span><span class="token operator">:</span> <span class="token string">'/index.html'</span><span class="token punctuation">,</span>
  <span class="token string-property property">'Shop'</span><span class="token operator">:</span> <span class="token string">'/shop.html'</span><span class="token punctuation">,</span>
  <span class="token string-property property">'About Me'</span><span class="token operator">:</span> <span class="token string">'/aboutMe.html'</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> navMenu <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>navSet<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>name<span class="token punctuation">,</span> url<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span> <span class="token attr-name">href</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>url<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
root<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>navMenu<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Output:</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Home<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/index.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">Home</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Shop<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/shop.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">Shop</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>About Me<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/aboutMe.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">About Me</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>2e:["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"$65"}}]}]
2f:["$","hr",null,{}]
31:["$","hr",null,{}]
33:["$","hr",null,{}]
35:["$","hr",null,{}]
37:["$","hr",null,{}]
3a:["$","hr",null,{}]
3c:["$","hr",null,{}]
3e:["$","hr",null,{}]
41:["$","li",null,{"children":"Subscribing to data, websockets, or streaming APIs"}]
66:T7c8,<span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ws <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebSocket</span><span class="token punctuation">(</span><span class="token string">"wss://example.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  ws<span class="token punctuation">.</span>onmessage <span class="token operator">=</span> event <span class="token operator">=</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span> <span class="token punctuation">{</span>
    ws<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Cleanup when component unmounts</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>42:["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"$66"}}]}]
43:["$","li",null,{"children":["Timers ",["$","code",null,{"children":"setInterval"}]," and ",["$","code",null,{"children":"setTimeout"}]," must be cleaned up"]}]
67:T718,<span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Tick"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span> <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>44:["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"$67"}}]}]
45:["$","li",null,{"children":"Initializing libraries inside useEffect (Chart.js, Leaflet, GSAP) requires cleanup"}]
68:T536,<span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> chart <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Chart</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span> chart<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>46:["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"$68"}}]}]
47:["$","hr",null,{}]
49:["$","br",null,{}]
69:Tfc0,<span class="token comment">// Saving ref of JSX elements/components to be used else where</span>
<span class="token comment">// Passing the ref onto a sibling component or use it at parent</span>
<span class="token keyword">function</span> <span class="token function">Parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> buttonRef <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Child</span></span> <span class="token attr-name">buttonRef</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>buttonRef<span class="token punctuation">}</span></span><span class="token punctuation">/></span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UseRef</span></span> <span class="token attr-name">buttonRef</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>buttonRef<span class="token punctuation">}</span></span><span class="token punctuation">/></span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
<span class="token keyword">function</span> <span class="token function">Child</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> buttonRef <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <mark><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>buttonRef<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span></mark>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>4a:["$","pre",null,{"className":"language-jsx","children":["$","code",null,{"className":"language-jsx","dangerouslySetInnerHTML":{"__html":"$69"}}]}]
4b:["$","hr",null,{}]
4d:["$","hr",null,{}]
4f:["$","li",null,{"children":[["$","code",null,{"children":"onPointerOver"}],", ",["$","code",null,{"children":"onPointerOut"}]," : Pointer enters/leaves (bubbles)"]}]
50:["$","li",null,{"children":[["$","code",null,{"children":"onPointerCancel"}]," : Pointer interaction canceled"]}]
51:["$","li",null,{"children":[["$","strong",null,{"children":"Keyboard Events"}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","code",null,{"children":"onKeyDown"}]," : Key is pressed down"]}],["$","li",null,{"children":[["$","code",null,{"children":"onKeyPress"}]," : Key is pressed (deprecated, prefer ",["$","code",null,{"children":"onKeyDown"}],")"]}],["$","li",null,{"children":[["$","code",null,{"children":"onKeyUp"}]," : Key is released"]}]]}]]}]
52:["$","li",null,{"children":[["$","strong",null,{"children":"Form & Input Events"}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","code",null,{"children":"onSubmit"}]," : Form submission"]}],["$","li",null,{"children":[["$","code",null,{"children":"onChange"}]," : Input/select value changes"]}],["$","li",null,{"children":[["$","code",null,{"children":"onInput"}]," : Input value changes (real-time)"]}],["$","li",null,{"children":[["$","code",null,{"children":"onFocus"}]," / ",["$","code",null,{"children":"onBlur"}]," : Element gains or loses focus"]}],["$","li",null,{"children":[["$","code",null,{"children":"onInvalid"}]," : Form validation fails"]}],["$","li",null,{"children":[["$","code",null,{"children":"onReset"}]," : Form reset"]}]]}]]}]
53:["$","li",null,{"children":[["$","strong",null,{"children":"Clipboard Events"}],["$","ul",null,{"children":["$","li",null,{"children":[["$","code",null,{"children":"onCopy"}],", ",["$","code",null,{"children":"onCut"}],", ",["$","code",null,{"children":"onPaste"}]," : Clipboard interactions"]}]}]]}]
54:["$","li",null,{"children":[["$","strong",null,{"children":"Drag & Drop Events"}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","code",null,{"children":"onDragStart"}],", ",["$","code",null,{"children":"onDrag"}],", ",["$","code",null,{"children":"onDragEnd"}]," : Drag starts, moves, ends"]}],["$","li",null,{"children":[["$","code",null,{"children":"onDragEnter"}],", ",["$","code",null,{"children":"onDragOver"}],", ",["$","code",null,{"children":"onDragLeave"}],",",["$","code",null,{"children":"onDrop"}]," : Drag target interactions"]}]]}]]}]
55:["$","li",null,{"children":[["$","strong",null,{"children":"Touch Events"}],["$","ul",null,{"children":["$","li",null,{"children":[["$","code",null,{"children":"onTouchStart"}],", ",["$","code",null,{"children":"onTouchMove"}],", ",["$","code",null,{"children":"onTouchEnd"}],",",["$","code",null,{"children":"onTouchCancel"}]," : Touch interactions"]}]}]]}]
56:["$","li",null,{"children":[["$","strong",null,{"children":"Composition Events"}],["$","ul",null,{"children":["$","li",null,{"children":[["$","code",null,{"children":"onCompositionStart"}],", ",["$","code",null,{"children":"onCompositionUpdate"}],",",["$","code",null,{"children":"onCompositionEnd"}]," : IME text input handling"]}]}]]}]
57:["$","li",null,{"children":[["$","strong",null,{"children":"Media Events"}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","code",null,{"children":"onPlay"}],", ",["$","code",null,{"children":"onPause"}],", ",["$","code",null,{"children":"onEnded"}]," : Media playback state"]}],["$","li",null,{"children":[["$","code",null,{"children":"onVolumeChange"}],", ",["$","code",null,{"children":"onTimeUpdate"}],", ",["$","code",null,{"children":"onProgress"}]," : Media volume, time, and loading progress"]}],["$","li",null,{"children":[["$","code",null,{"children":"onLoadedData"}],", ",["$","code",null,{"children":"onLoadedMetadata"}],", ",["$","code",null,{"children":"onCanPlay"}],",",["$","code",null,{"children":"onCanPlayThrough"}]," : Media readiness events"]}],["$","li",null,{"children":[["$","code",null,{"children":"onStalled"}],", ",["$","code",null,{"children":"onSuspend"}],", ",["$","code",null,{"children":"onWaiting"}]," : Media buffering states"]}]]}]]}]
58:["$","li",null,{"children":[["$","strong",null,{"children":"Animation & Transition Events"}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","code",null,{"children":"onAnimationStart"}],", ",["$","code",null,{"children":"onAnimationEnd"}],",",["$","code",null,{"children":"onAnimationIteration"}]," : CSS animations"]}],["$","li",null,{"children":[["$","code",null,{"children":"onTransitionEnd"}]," : CSS transition ends"]}]]}]]}]
59:["$","li",null,{"children":[["$","strong",null,{"children":"Wheel & Scroll Events"}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","code",null,{"children":"onWheel"}]," : Mouse wheel scroll"]}],["$","li",null,{"children":[["$","code",null,{"children":"onScroll"}]," : Scroll event on an element"]}]]}]]}]
5a:["$","p",null,{"children":["More events: ",["$","a",null,{"href":"https://react.dev/reference/react-dom/components/common","children":"react.dev/reference/react-dom/components/common"}]]}]
5b:["$","hr",null,{}]
61:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
5d:null
5f:{"metadata":[["$","title","0",{"children":"React Basics"}],["$","meta","1",{"name":"description","content":"Basics concept of React"}]],"error":null,"digest":"$undefined"}
64:"$5f:metadata"
