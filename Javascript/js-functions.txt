1:"$Sreact.fragment"
2:I[79520,["/_next/static/chunks/19df48d0b28bc07f.js","/_next/static/chunks/634e1e2133a61606.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],""]
3:I[35974,["/_next/static/chunks/19df48d0b28bc07f.js","/_next/static/chunks/634e1e2133a61606.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"ThemeProvider"]
4:I[20908,["/_next/static/chunks/19df48d0b28bc07f.js","/_next/static/chunks/634e1e2133a61606.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"default"]
5:I[39756,["/_next/static/chunks/19df48d0b28bc07f.js","/_next/static/chunks/634e1e2133a61606.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"default"]
6:I[37457,["/_next/static/chunks/19df48d0b28bc07f.js","/_next/static/chunks/634e1e2133a61606.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"default"]
15:I[68027,["/_next/static/chunks/19df48d0b28bc07f.js","/_next/static/chunks/634e1e2133a61606.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"default"]
:HL["/_next/static/chunks/64fb0e62d66091d5.css","style"]
0:{"P":null,"b":"Mb4ok0VnbUKHLcgRDxr7X","p":"","c":["","Javascript","js-functions"],"i":false,"f":[[["",{"children":["Javascript",{"children":["js-functions",{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/64fb0e62d66091d5.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","script","script-0",{"src":"/_next/static/chunks/19df48d0b28bc07f.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/634e1e2133a61606.js","async":true,"nonce":"$undefined"}],["$","script","script-2",{"src":"/_next/static/chunks/7dd66bdf8a7e5707.js","async":true,"nonce":"$undefined"}]],["$","html",null,{"lang":"en","data-theme":"dark","children":[["$","head",null,{"children":["$","$L2",null,{"id":"theme-script","strategy":"beforeInteractive","children":"\n            (function() {\n              const theme = localStorage.getItem('data-theme') || 'dark';\n              document.documentElement.setAttribute('data-theme', theme);\n            })();\n          "}]}],["$","body",null,{"id":"root","children":["$","$L3",null,{"children":["$","$L4",null,{"children":["$","$L5",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]}]]}]]}],{"children":["Javascript",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["js-functions",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[[["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"referenceFunction","children":"Calling vs Referencing Function"}],["$","p",null,{"children":"In Javascript, whenever there is a set of parenthesis in front of a function, it will be called so only put parenthesis in front if you want the result from the function immediately"}],["$","ul",null,{"children":[["$","li",null,{"children":"When passing a function as a reference, leave the parenthesis out"}],["$","ul",null,{"children":["$","li",null,{"children":["$","code",null,{"children":"addEventListener( 'click', myFunction)"}]}]}],["$","li",null,{"children":"If the function has arguments, wrap it in an arrow function or handler function to keep the reference"}],["$","ul",null,{"children":[["$","li",null,{"children":["$","code",null,{"children":"addEventListener( 'click', () => myFunction(arg1))"}]}],["$","li",null,{"children":[["$","code",null,{"children":"const handleFunc = () => myFunctino(arg1)"}]," and then using it: ",["$","code",null,{"children":"addEventListener('click', handleFunc)"}]]}]]}],["$","li",null,{"children":"If you the result of the function immediately, put parenthesis in front of it"}],["$","ul",null,{"children":[["$","li",null,{"children":["$","code",null,{"children":"if(!restoreState()) initialize();"}]}],["$","li",null,{"children":[["$","code",null,{"children":"addEventListener( 'click', myFunction())"}]," myFunction will run immediately here instead of waiting for event trigger"]}]]}]]}],"$L7"]}],"$L8","$L9","$La","$Lb","$Lc","$Ld","$Le","$Lf","$L10","$L11","$L12"],null,"$L13"]}],{},null,false]},null,false]},null,false]},null,false],"$L14",false]],"m":"$undefined","G":["$15",["$L16"]],"s":false,"S":true}
39:I[97367,["/_next/static/chunks/19df48d0b28bc07f.js","/_next/static/chunks/634e1e2133a61606.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"OutletBoundary"]
3b:I[11533,["/_next/static/chunks/19df48d0b28bc07f.js","/_next/static/chunks/634e1e2133a61606.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"AsyncMetadataOutlet"]
3d:I[97367,["/_next/static/chunks/19df48d0b28bc07f.js","/_next/static/chunks/634e1e2133a61606.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"ViewportBoundary"]
3f:I[97367,["/_next/static/chunks/19df48d0b28bc07f.js","/_next/static/chunks/634e1e2133a61606.js","/_next/static/chunks/7dd66bdf8a7e5707.js"],"MetadataBoundary"]
40:"$Sreact.suspense"
7:["$","hr",null,{}]
8:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"writingFunctions","children":"Writing Javascript Functions"}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"Declaration"}],": ",["$","code",null,{"children":"function add(a, b) { return a + b; }"}]]}],["$","li",null,{"children":[["$","strong",null,{"children":"Expression"}],": ",["$","code",null,{"children":"const add = function(a, b) { return a + b; }"}]]}],["$","ul",null,{"children":["$","li",null,{"children":["Use the variable like a normal function: ",["$","code",null,{"children":"add(2,3);"}]]}]}],["$","li",null,{"children":[["$","strong",null,{"children":"Arrow Function"}],": can only be used inline and not through named declaration unless the function is assigned to a variable"]}],["$","ul",null,{"children":[["$","li",null,{"children":"As Single Expression:"}],["$","ul",null,{"children":[["$","li",null,{"children":["$","code",null,{"children":"() => 'return message';"}]}],["$","li",null,{"children":["$","code",null,{"children":"a => a**2;"}]}],["$","li",null,{"children":["$","code",null,{"children":"(a,b) => a + b;"}]}]]}],["$","li",null,{"children":"As a Block: requires curly bracket for multi-lines arrow function"}],["$","pre",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript","dangerouslySetInnerHTML":{"__html":"<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  statements<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token parameter\">param</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  statements<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token parameter\">param1<span class=\"token punctuation\">,</span> paramN</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  statements<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>"}}]}],["$","li",null,{"children":"As an Object Literal: requires parenthesis around the function body; Javascript will read the content as an object and implicitly return it"}],["$","pre",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript","dangerouslySetInnerHTML":{"__html":"<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> value <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Same thing</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> value <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>"}}]}],["$","li",null,{"children":["More on Arrow Functions: ",["$","a",null,{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions","target":"_blank","children":"developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions"}]]}]]}],"$L17","$L18"]}],"$L19"]}]
9:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"functionParameters","children":"Function Parameters"}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"Default Parameter"}],": ",["$","code",null,{"children":"function add(a, b = 5) "}]]}],["$","li",null,{"children":[["$","strong",null,{"children":"Rest Parameters"}],": let the function accepts an indefinite number of arguments as an array"]}],["$","pre",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>theArgs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> total <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> arg <span class=\"token keyword\">of</span> theArgs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    total <span class=\"token operator\">+=</span> arg<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> total<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>"}}]}],["$","li",null,{"children":[["$","strong",null,{"children":"arguments Object"}],": useful if the function was called with more arguments than they declared"]}],["$","pre",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> total <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> arg <span class=\"token keyword\">of</span> arguments<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    total <span class=\"token operator\">+=</span> arg<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> total<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>"}}]}],["$","ul",null,{"children":["$","li",null,{"children":"rest parameter is preferred over using arguments object"}]}]]}],["$","hr",null,{}]]}]
1a:T9e0,<span class="token comment">// Using new Promise()</span>
<span class="token keyword">function</span> <span class="token function">createPromise</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">onSuccess<span class="token punctuation">,</span> onFailure</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Do something</span>
        <span class="token function">onSuccess</span><span class="token punctuation">(</span>successValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">onFailure</span><span class="token punctuation">(</span>failureValue<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Arrow function form</span>
<span class="token function-variable function">createPromise</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">new</span> <span class="token class-name">Promise</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token parameter">onSuccess<span class="token punctuation">,</span> onFailure</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token comment">//Do something</span>
        <span class="token function">onSuccess</span><span class="token punctuation">(</span>successValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">onFailure</span><span class="token punctuation">(</span>failureValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>1b:T7c8,<span class="token comment">// using async</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">createPromise</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Do something</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>successful<span class="token punctuation">)</span>
        <span class="token keyword">return</span> successValue<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>failureValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// Arrow function form</span>
<span class="token function-variable function">createPromise</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token comment">// Do something</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>successful<span class="token punctuation">)</span>
        <span class="token keyword">return</span> successValue<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>failureValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>a:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"promiseAsync","children":"Promise & Async"}],["$","p",null,{"children":"Promise and Async allow Javascript to create background tasks and not block up the main thread."}],["$","h4",null,{"className":"sub-section-header","children":"Creating a background task"}],["$","ul",null,{"children":["$","li",null,{"children":[["$","strong",null,{"children":"Method 1"}],": using ",["$","code",null,{"children":"Promise"}]]}]}],["$","pre",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript","dangerouslySetInnerHTML":{"__html":"$1a"}}]}],["$","ul",null,{"children":["$","li",null,{"children":[["$","strong",null,{"children":"Method 2"}],": using ",["$","code",null,{"children":"async"}]]}]}],["$","pre",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript","dangerouslySetInnerHTML":{"__html":"$1b"}}]}],"$L1c","$L1d","$L1e","$L1f","$L20","$L21","$L22","$L23","$L24"]}]
25:T66c,<span class="token function">createPromise</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token parameter">result1</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">doSomething1</span><span class="token punctuation">(</span>result1<span class="token punctuation">)</span> <span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token parameter">result2</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">doSomething2</span><span class="token punctuation">(</span>result2<span class="token punctuation">)</span> <span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token parameter">rejected</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Error: '</span> <span class="token operator">+</span> rejected<span class="token punctuation">)</span> <span class="token punctuation">)</span>b:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"chainingPromises","children":"Chaining Promises"}],["$","pre",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript","dangerouslySetInnerHTML":{"__html":"$25"}}]}],["$","h4",null,{"className":"sub-section-header","children":"Notes:"}],["$","ul",null,{"children":[["$","li",null,{"children":["Multiple ",["$","code",null,{"children":"catch"}]," should be avoided in a promise chain."]}],["$","li",null,{"children":["Mixing ",["$","code",null,{"children":"async"}]," and normal functions is allowed."]}]]}],["$","hr",null,{}]]}]
26:T110b,<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token string">'https://example.org/products.json'</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> requestOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>            
            <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">'Content-Type'</span><span class="token operator">:</span> <span class="token string">'application/json'</span><span class="token punctuation">,</span>
                <span class="token string-property property">'Authorization'</span><span class="token operator">:</span> <span class="token string">'Bearer your-token-here'</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token literal-property property">body</span><span class="token operator">:</span> jsonObj<span class="token punctuation">,</span>
            <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'cors'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">cache</span><span class="token operator">:</span> <span class="token string">'no-cache'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">credentials</span><span class="token operator">:</span> <span class="token string">'include'</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> requestOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>response<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'Response status: '</span> <span class="token operator">+</span> response<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>c:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"fetch","children":"Fetch API"}],["$","p",null,{"children":[["$","code",null,{"children":"fetch"}]," is used to make HTTP requests, using a ",["$","code",null,{"children":"RequestInit"}]," dictionary to add options to the request and processing the response by returning a ",["$","code",null,{"children":"Response"}]," object"]}],["$","pre",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript","dangerouslySetInnerHTML":{"__html":"$26"}}]}],"$L27","$L28","$L29","$L2a","$L2b","$L2c","$L2d"]}]
d:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"getPost","children":"GET & POST"}],["$","p",null,{"children":[["$","strong",null,{"children":"When to use GET"}],":"]}],["$","ul",null,{"children":[["$","li",null,{"children":"Retrieving data without changing anything on the server"}],["$","li",null,{"children":"The request can be cached, bookmarked, and shared via URL."}],["$","li",null,{"children":"Limited by URL length (~2,000 characters in many browsers)."}],["$","li",null,{"children":"Should not be used for sensitive data — query parameters are visible in the URL"}]]}],["$","p",null,{"children":[["$","strong",null,{"children":"When to use POST"}],":"]}],["$","ul",null,{"children":[["$","li",null,{"children":"Sending data that changes state on the server (e.g., creating/updating records)."}],["$","li",null,{"children":"Sending large amounts of data (no URL length limit)."}],["$","li",null,{"children":"Safer for sensitive data (data goes in request body, not URL — though still use HTTPS)."}],["$","li",null,{"children":"Not cached by default."}]]}],["$","h4",null,{"className":"sub-section-header","children":"Notes"}],["$","ul",null,{"children":[["$","li",null,{"children":"GET: safe, read-only operations"}],["$","li",null,{"children":"POST: state-changing or large/ sensitive data submissions (use POST if in doubt)"}]]}],["$","hr",null,{}]]}]
2e:T865,<span class="token keyword">const</span> u <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span><span class="token string">'https://example.com/path?tab=home'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> queryParams <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span>search<span class="token punctuation">)</span><span class="token punctuation">;</span>

queryParams<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'lang'</span><span class="token punctuation">,</span><span class="token string">'en'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// add or update query parameter</span>
queryParams<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'tab'</span><span class="token punctuation">,</span><span class="token string">'profile'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
u<span class="token punctuation">.</span>search <span class="token operator">=</span> queryParams<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// update query</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span>href<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 'https://example.com/path?lang=en&amp;tab=profile'</span>e:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"url","children":"URL & URLSearchParams Object"}],["$","p",null,{"children":[["$","code",null,{"children":"URL"}]," and ",["$","code",null,{"children":"URLSearchParams"}]," objects are useful for constructing URL, especially for GET requests"]}],["$","pre",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript","dangerouslySetInnerHTML":{"__html":"$2e"}}]}],["$","hr",null,{}]]}]
f:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"content-type","children":"Content-Type"}],["$","table",null,{"className":"content-type-table","children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"children":"Content-Type"}],["$","th",null,{"children":"Description"}],["$","th",null,{"children":"Example Usage"}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"children":"application/json"}],["$","td",null,{"children":"JSON-formatted data"}],["$","td",null,{"children":"Sending API requests with JSON bodies"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"application/x-www-form-urlencoded"}],["$","td",null,{"children":"Form data encoded as key-value pairs"}],["$","td",null,{"children":"HTML forms without enctype set to multipart/form-data"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"multipart/form-data"}],["$","td",null,{"children":"Form data with files or binary data"}],["$","td",null,{"children":"File uploads in HTML forms"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"text/plain"}],["$","td",null,{"children":"Plain text"}],["$","td",null,{"children":"Sending simple text in request/response"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"text/html"}],["$","td",null,{"children":"HTML markup"}],["$","td",null,{"children":"Returning HTML content from a server"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"application/xml"}],["$","td",null,{"children":"XML-formatted data"}],["$","td",null,{"children":"APIs that require XML"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"text/xml"}],["$","td",null,{"children":"XML as plain text"}],["$","td",null,{"children":"Legacy XML APIs"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"application/javascript"}],["$","td",null,{"children":"JavaScript code"}],["$","td",null,{"children":"Sending or returning JS scripts"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"application/pdf"}],["$","td",null,{"children":"PDF documents"}],["$","td",null,{"children":"Sending or downloading PDFs"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"image/png"}],["$","td",null,{"children":"PNG image data"}],["$","td",null,{"children":"Uploading or returning PNG images"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"image/jpeg"}],["$","td",null,{"children":"JPEG image data"}],["$","td",null,{"children":"Uploading or returning JPEG images"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"image/gif"}],["$","td",null,{"children":"GIF image data"}],["$","td",null,{"children":"Uploading or returning GIF images"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"application/octet-stream"}],["$","td",null,{"children":"Arbitrary binary data"}],["$","td",null,{"children":"File downloads, binary uploads"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"application/zip"}],["$","td",null,{"children":"ZIP archives"}],["$","td",null,{"children":"Sending or downloading ZIP files"}]]}]]}]]}],["$","hr",null,{}]]}]
2f:T424,<span class="token keyword">const</span> timeOutId <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'This message is shown after 3 seconds'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// time in milliseconds</span>

<span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeOutId<span class="token punctuation">)</span><span class="token punctuation">;</span>30:T67f,<span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> intervalId <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    count<span class="token operator">++</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'This message is shown every 2 seconds'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">===</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">clearInterval</span><span class="token punctuation">(</span>intervalId<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Stop after 5 times</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// time in milliseconds</span>10:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"timers","children":"Timers, Date, & Number Formatting"}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","code",null,{"children":"timeoutId = setTimeout( function(), time )"}]," and ",["$","code",null,{"children":"clearTimeout( timeOutId)"}]]}],["$","pre",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript","dangerouslySetInnerHTML":{"__html":"$2f"}}]}],["$","li",null,{"children":[["$","code",null,{"children":"intervalId = setInterval( function(), time )"}]," and ",["$","code",null,{"children":"clearInterval( intervalId )"}]]}],["$","pre",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript","dangerouslySetInnerHTML":{"__html":"$30"}}]}],"$L31","$L32","$L33","$L34","$L35"]}],"$L36"]}]
37:T1644,<span class="token comment">// Sum of an array of numbers</span>
<span class="token keyword">const</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> sum <span class="token operator">=</span> numbers<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">accumulator<span class="token punctuation">,</span> currentValue</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> accumulator <span class="token operator">+</span> currentValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token comment">// Initial value is 0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">// Output: 15</span>

<span class="token comment">// Example with objects</span>
<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'apple'</span><span class="token punctuation">,</span> <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token number">1.2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token number">0.8</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token number">1.5</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> totalPrice <span class="token operator">=</span> items<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">accumulator<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> accumulator <span class="token operator">+</span> item<span class="token punctuation">.</span>price<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>totalPrice<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Output: 3.5</span>

<span class="token comment">// Example with functions</span>
<span class="token keyword">const</span> asyncSequence <span class="token operator">=</span> <span class="token punctuation">[</span>func1<span class="token punctuation">,</span> func2<span class="token punctuation">,</span> func3<span class="token punctuation">]</span><span class="token punctuation">;</span>
asyncSequence<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">p<span class="token punctuation">,</span> f</span><span class="token punctuation">)</span> <span class="token operator">=></span> p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">,</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Same as Promise.resolve().then(func1).then(func2).then(func3)</span>11:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"reduce","children":"Reduce Method"}],["$","p",null,{"children":[["$","code",null,{"children":"reduce()"}]," method reduces an array to a single value by applying a function to each element, accumulating the result"]}],["$","ul",null,{"children":["$","li",null,{"children":["$","code",null,{"children":"reduce( function(total, currentValue), initialValue)"}]}]}],["$","pre",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript","dangerouslySetInnerHTML":{"__html":"$37"}}]}],"$L38"]}]
12:["$","section",null,{"children":[["$","h3",null,{"className":"section-header","id":"mapFilterReduceForEach","children":"Map, Filter, Reduce, forEach Methods"}],["$","p",null,{"children":"These methods are used to manipulate arrays in a functional programming style."}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","code",null,{"children":"forEach"}],": Executes a function for each element in the collection."]}],["$","ul",null,{"children":[["$","li",null,{"children":["$","code",null,{"children":"forEach( function(element) )"}]}],["$","li",null,{"children":"Available for Array, Set, and Map"}],["$","li",null,{"children":"Use when there is a side effect to the loop (i.e. writing to a file)"}]]}],["$","li",null,{"children":[["$","code",null,{"children":"map"}],": Executes a function for each element in the array, and save the results in a new array"]}],["$","ul",null,{"children":[["$","li",null,{"children":["$","code",null,{"children":"map( function(element) )"}]}],["$","li",null,{"children":"Available only for Array"}],["$","li",null,{"children":"Use when you want a new array after processing old array"}]]}],["$","li",null,{"children":[["$","code",null,{"children":"filter"}],": Creates a shallow copy of the elements that passed the test provided by the Boolean function."]}],["$","ul",null,{"children":[["$","li",null,{"children":["$","code",null,{"children":"filter( booleanFunction(element) )"}]}],["$","li",null,{"children":"Available only for Array"}],["$","li",null,{"children":"Use when you want a subset of the original array"}]]}],["$","li",null,{"children":[["$","code",null,{"children":"reduce"}],": Executes a function for each element in the array."]}],["$","ul",null,{"children":[["$","li",null,{"children":["$","code",null,{"children":"reduce( function(total, currentValue), initialValue)"}]}],["$","li",null,{"children":"Available only for Array"}],["$","li",null,{"children":"For creating a new object composed of items from your array"}]]}]]}],["$","h4",null,{"className":"sub-section-header","children":"Notes"}],["$","ul",null,{"children":[["$","li",null,{"children":"Use the spread operator to convert a Set into an Array to be able to use map(), reduce(), filter()"}],["$","ul",null,{"children":["$","li",null,{"children":["$","code",null,{"children":"const arr = [...mySet];"}]}]}]]}]]}]
13:["$","$L39",null,{"children":["$L3a",["$","$L3b",null,{"promise":"$@3c"}]]}]
14:["$","$1","h",{"children":[null,[["$","$L3d",null,{"children":"$L3e"}],null],["$","$L3f",null,{"children":["$","div",null,{"hidden":true,"children":["$","$40",null,{"fallback":null,"children":"$L41"}]}]}]]}]
16:["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/64fb0e62d66091d5.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]
17:["$","li",null,{"children":[["$","strong",null,{"children":"Named functions"}]," can also be declared in another function (useful in React to pass an event handler funtion to components)"]}]
18:["$","pre",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">function</span> <span class=\"token function\">outerFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">innerFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token function\">innerFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>"}}]}]
19:["$","hr",null,{}]
1c:["$","h4",null,{"className":"sub-section-header","children":"Consuming a promise/ resolving a background task"}]
1d:["$","ul",null,{"children":["$","li",null,{"children":[["$","strong",null,{"children":"Method 1"}],": using ",["$","code",null,{"children":".then() .catch() .finally()"}]]}]}]
42:T701,<span class="token function">createPromise</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token parameter">successValue</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>successValue<span class="token punctuation">)</span> <span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token parameter">failureValue</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Error: '</span> <span class="token operator">+</span> failureValue<span class="token punctuation">)</span> <span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Gets called no matter what.'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>1e:["$","pre",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript","dangerouslySetInnerHTML":{"__html":"$42"}}]}]
1f:["$","ul",null,{"children":["$","li",null,{"children":[["$","strong",null,{"children":"Method 2"}],": using ",["$","code",null,{"children":"async"}]," and ",["$","code",null,{"children":"await"}]]}]}]
43:T7ae,<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getPromise</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span><span class="token punctuation">{</span>
        successValue <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">createPromise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>successValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Error: '</span> <span class="token operator">+</span> error<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Gets called no matter what.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">getPromise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>20:["$","pre",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript","dangerouslySetInnerHTML":{"__html":"$43"}}]}]
21:["$","h4",null,{"className":"sub-section-header","children":"Notes:"}]
22:["$","ul",null,{"children":[["$","li",null,{"children":[["$","code",null,{"children":"await"}]," has to be used in an ",["$","code",null,{"children":"async"}]," function"]}],["$","li",null,{"children":[["$","code",null,{"children":"async / await"}]," is cleaner when successive async calls are required (i.e. fetch data → convert json to data)"]}]]}]
23:["$","p",null,{"children":["Reference: ",["$","a",null,{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promise","target":"_blank","children":"developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promise"}]]}]
24:["$","hr",null,{}]
27:["$","h4",null,{"className":"sub-section-header","children":[["$","code",null,{"children":"RequestInit"}]," Parameters"]}]
28:["$","ul",null,{"children":[["$","li",null,{"children":[["$","code",null,{"children":"method"}],": 'POST', 'GET', 'PUT', 'DELETE'"]}],["$","li",null,{"children":[["$","code",null,{"children":"headers"}],":"]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","code",null,{"children":"'Content-Type'"}],": ",["$","code",null,{"children":"application/json"}],", ",["$","code",null,{"children":"text/plain"}],", ",["$","code",null,{"children":"image/jpeg"}],", etc."]}],["$","li",null,{"children":["$","code",null,{"children":"'Authorization'"}]}]]}],["$","li",null,{"children":[["$","code",null,{"children":"body"}],": a string, ArrayBuffer, Blob, File, FormData, etc."]}],["$","li",null,{"children":[["$","code",null,{"children":"mode"}],": 'cors', 'no-cors', 'same-origin'"]}],["$","li",null,{"children":[["$","code",null,{"children":"cache"}],": 'default', 'no-cache', 'reload', 'force-cache', 'only-if-cached'"]}],["$","li",null,{"children":[["$","code",null,{"children":"credentials"}],": Whether to send cookies: 'omit', 'same-origin', 'include'."]}],["$","li",null,{"children":[["$","code",null,{"children":"redirect"}],": Redirect behavior: 'follow', 'error', 'manual'."]}],["$","li",null,{"children":[["$","code",null,{"children":"referrer"}],": referrer URL or 'about:client'"]}],["$","li",null,{"children":[["$","code",null,{"children":"keepalive"}],": true/false; Whether the request can outlive the page (useful for analytics pings)."]}],["$","li",null,{"children":[["$","code",null,{"children":"signal"}],": Allows aborting the request using AbortController."]}]]}]
29:["$","h4",null,{"className":"sub-section-header","children":[["$","code",null,{"children":"Response"}]," Methods"]}]
2a:["$","ul",null,{"children":[["$","li",null,{"children":["$","code",null,{"children":"arrayBuffer()"}]}],["$","li",null,{"children":["$","code",null,{"children":"blob()"}]}],["$","li",null,{"children":["$","code",null,{"children":"bytes()"}]}],["$","li",null,{"children":["$","code",null,{"children":"clone()"}]}],["$","li",null,{"children":["$","code",null,{"children":"json()"}]}],["$","li",null,{"children":["$","code",null,{"children":"text()"}]}],["$","li",null,{"children":["$","code",null,{"children":"formData()"}]}]]}]
2b:["$","h4",null,{"className":"sub-section-header","children":"Notes"}]
2c:["$","ul",null,{"children":[["$","li",null,{"children":["Fetch Reference: ",["$","a",null,{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Window/fetch","target":"_blank","children":"developer.mozilla.org/en-US/docs/Web/API/Window/fetch"}]]}],["$","li",null,{"children":["RequestInit Reference: ",["$","a",null,{"href":"https://developer.mozilla.org/en-US/docs/Web/API/RequestInit","target":"_blank","children":"developer.mozilla.org/en-US/docs/Web/API/RequestInit"}]]}],["$","li",null,{"children":["Response Reference: ",["$","a",null,{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Response","target":"_blank","children":"developer.mozilla.org/en-US/docs/Web/API/Response"}]]}]]}]
2d:["$","hr",null,{}]
31:["$","li",null,{"children":"Date Object"}]
44:T1038,<span class="token keyword">let</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Current date and time</span>
<span class="token keyword">let</span> specificDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">'2023-10-01T10:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Specific date and time</span>
<span class="token keyword">let</span> specificDateNum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2023</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Note: month is 0-indexed (0=Jan, 9=Oct)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// ISO format</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Localized format</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// Get year</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// Get month (0-11)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// Get day of month (1-31)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// Get hours (0-23)</span>32:["$","pre",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript","dangerouslySetInnerHTML":{"__html":"$44"}}]}]
33:["$","li",null,{"children":"Intl Object"}]
45:T5db,<span class="token comment">// Formatting numbers</span>
<span class="token keyword">let</span> number <span class="token operator">=</span> <span class="token number">1234567.89</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> formattedNumber <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intl<span class="token punctuation">.</span>NumberFormat</span><span class="token punctuation">(</span><span class="token string">'en-US'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token string">'currency'</span><span class="token punctuation">,</span> <span class="token literal-property property">currency</span><span class="token operator">:</span> <span class="token string">'USD'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formattedNumber<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// '$1,234,567.89'</span>34:["$","pre",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript","dangerouslySetInnerHTML":{"__html":"$45"}}]}]
35:["$","ul",null,{"children":["$","li",null,{"children":["More on Intl: ",["$","a",null,{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl","target":"_blank","children":"developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl"}]]}]}]
36:["$","hr",null,{}]
38:["$","hr",null,{}]
3e:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
3a:null
3c:{"metadata":[["$","title","0",{"children":"Javascript Functions"}],["$","meta","1",{"name":"description","content":"Notes/Reference on various Javascript functions"}]],"error":null,"digest":"$undefined"}
41:"$3c:metadata"
